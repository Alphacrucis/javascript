/*  IKEA_codigosLargos(doc)    -----------------------        Devuelve una objeto conteniendo de los códigos largos en el documento 'doc'*/function IKEA_codigosLargos(doc){    app.findGrepPreferences.appliedCharacterStyle = null;    app.findGrepPreferences.appliedParagraphStyle = null;    app.findGrepPreferences.findWhat = "\\d\\d\\d\\.\\d\\d\\d\\.\\d\\d";    var finds = app.activeDocument.findGrep();    return extraerInformacionCodigos(finds);}/*  IKEA_codigosCortos(doc)    -----------------------        Devuelve una objeto conteniendo de los códigos cortos ('almCOD') en el documento 'doc'*/function IKEA_codigosCortos(doc){    app.findGrepPreferences.appliedCharacterStyle = 'AlmCOD';    app.findGrepPreferences.appliedParagraphStyle = null;    app.findGrepPreferences.findWhat = "([\\l\\u](?-i)){3}([\\l\\u](?-i))?";    var finds = app.activeDocument.findGrep();    return extraerInformacionCodigos(finds);}function extraerInformacionCodigos(finds){    var arr = { length:0, codigos:[] };    for (var i=0, e=finds.length; i<e; ++i)    {        var code = finds[i].contents;        if (arr[code] == null)        {            arr[code] = [ finds[i] ];            arr.length++;                        arr.codigos.push(code);        } else {            arr[code].push( finds[i] );        }    }    return arr;}var Codigos = IKEA_codigosCortos(app.activeDocument);for (var i=0; i<Codigos.length; ++i)     $.writeln(Codigos.codigos[i]);$.writeln(Codigos[Codigos.codigos[0]][0].contents);