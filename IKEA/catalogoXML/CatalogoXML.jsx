/** IKEA Catalogo XML    Author: Javier Ramos    */#target "indesign"#targetengine "medianis"#strict on// Manage all imports#include "lib/_imports.jsx"// * --------------------------------------------------------------------------------------------------------/* Global palette window object */var palette;/* if there is a previous palette window, dispose it */if (!!palette) {    palette.close();    palette = undefined;    $.gc(); $.gc();}// * --------------------------------------------------------------------------------------------------------function main() {    palette = main_ui();    palette.show();}// * --------------------------------------------------------------------------------------------------------function add_product(code, source) {    var product = try_catch( function(){             return IKEA.Product(code, IKEA.getSource(source));         });    if (product && product.isValid) {        var target, deletetarget = false;                if (!app.selection || app.selection.length === 0) {            deletetarget = true;            target = app.activeWindow.activePage.textFrames.add({ geometricBounds:[0,0,30,210] });        } else {            target = app.selection[0];        }            try {            IKEA.XML.productToXML(product, target);            IKEA.Styles.apply(target);        } catch(e) {             showError(e);             if (deletetarget) {                 target.remove();             }         }    }}// * --------------------------------------------------------------------------------------------------------function view_product(code, source) {    var product = IKEA.Product(code, IKEA.getSource(source));         /* Loads the lib if not already loaded*/    if (!('ui' in $.global)) {        $.evalFile((new File($.fileName).path) + "/lib/IKEAProduct_View.jsx");    }    show_product(product);}// * --------------------------------------------------------------------------------------------------------function process_all(target, source) {    var obj;    if (target === 'page') {        if (!app.activeWindow.activePage.isValid) {            alert("ERROR: No hay ninguna página activa");            return ;        }        obj = app.activeWindow.activePage;    } else if (target === 'spread') {        if (!app.activeWindow.activeSpread.isValid) {            alert("ERROR: No hay ningún spread activo");            return ;        }        obj = app.activeWindow.activeSpread.pages;    } else if (target === 'document') {        if (!app.activeDocument.isValid) {            alert("ERROR: No hay ningún documento activo");            return ;        }        obj = app.activeDocument.pages;    } else {        alert("ERROR: el objetivo '" + target + "' no es válido");    }            app.scriptPreferences.enableRedraw = false;        var pages = (obj instanceof Page) ? [obj] : obj.everyItem().getElements();    pages.forEach(function(page) {        var tframes = page.allPageItems.filter(function(tf){ return tf instanceof TextFrame; });        var pb = pbar("Generar Artículos para página " + page.name, "", tframes.length);            pb.show();                try {            tframes.forEach(function(tf){                var wcodes = tf.words.everyItem().getElements();                wcodes.forEach(function(word){                    var code = word.contents.toString().match(IKEA.RE_LARGECODE);                    if (code && code.length > 0) {                        pb.display(code);                        app.select(word);                        try {                            add_product(code.toString(), source);                        } catch(e) {                            showError(e);                        }                        word.contents = word.contents.slice(11); // 11 is the length of a full code                    }                });                pb.step();            });        }        catch(e) {             alert(e.message);             pb.close();            app.scriptPreferences.enableRedraw = true;        }        finally {            app.scriptPreferences.enableRedraw = true;            pb.close();        }    });}// * --------------------------------------------------------------------------------------------------------function main_ui() {    var buttonStyle = 'preferredSize: [120, 24]';    var wr = """palette {         alignChildren: 'fill',        source: DropDownList {},        codePanel: Panel {            enabled: false,            lb1: StaticText { text: 'Código Artículo' },            partNumber: EditText { preferredSize: [ 120,24 ]},            bInsert : Button { text: 'Insertar', #buttonStyle# },            bView : Button { text: 'Ver artículo', #buttonStyle# },        },        doAllPanel: Panel {            enabled: false,            lb1: StaticText { text: 'Aplicar a todo' },            bAllPage    : Button { text: 'Página', #buttonStyle# },            bAllSpread  : Button { text: 'Spread', #buttonStyle# },            bAllDocument: Button { text: 'Documento', #buttonStyle# },        },        bClose : Button { text:'Cerrar', #buttonStyle# }    }""".replace(/#buttonStyle#/g, buttonStyle);        var wnd = new Window(wr);    IKEA.ORIGENES.forEach(function(source) {        wnd.source.add('item', source.name);    });    wnd.activePanels = function() {        var enabled = wnd.source.selection.text !== '';        wnd.codePanel.enabled = enabled;        wnd.doAllPanel.enabled = enabled;    };    wnd.source.onChange = function() { wnd.activePanels(); };        wnd.cancelElement = wnd.bClose;        wnd.codePanel.bInsert.onClick = function() {         if (!!wnd.codePanel.partNumber.text) {            add_product(wnd.codePanel.partNumber.text.replace(/\,/g,'.'), wnd.source.selection.text);        }    };        wnd.codePanel.bView.onClick = function() {        if (!!wnd.codePanel.partNumber.text) {            try_catch( function() {                 view_product(wnd.codePanel.partNumber.text.replace(/\,/g,'.'), wnd.source.selection.text);            });        }    };        wnd.doAllPanel.bAllPage.onClick = function() {         wnd.hide(); process_all('page', wnd.source.selection.text); wnd.show();     }    wnd.doAllPanel.bAllSpread.onClick = function() {         wnd.hide(); process_all('spread', wnd.source.selection.text); wnd.show();     }    wnd.doAllPanel.bAllDocument.onClick = function() {         wnd.hide(); process_all('document', wnd.source.selection.text); wnd.show();     }        return wnd;}// * --------------------------------------------------------------------------------------------------------function pbar(title, message, max) {    var wnd = new Window('palette', title);    wnd.message = wnd.add('statictext', undefined, message);    wnd.message.preferredSize = [300, 30];    wnd.pgBar = wnd.add('progressbar');    wnd.pgBar.preferredSize = [300, 30];    wnd.pgBar.maxvalue = max;        wnd.step = function(msg) {        this.value++;        wnd.display(msg);	};    wnd.display = function(msg) {        var f = false;        if (!app.scriptPreferences.enableRedraw)            { app.scriptPreferences.enableRedraw = true; f = true; }                    wnd.hide();         if (msg) {            wnd.message.text = msg;        }        wnd.show();                if (f) app.scriptPreferences.enableRedraw = false;    };            return wnd;}// * --------------------------------------------------------------------------------------------------------main();