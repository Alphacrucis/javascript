/** IKEA Catalogo XML    Author: Javier Ramos        Exportar y reimportar medidas para el catálogo        Códigos para fracciones:    fractions = {        "1/2": "\u00BD", // U+00BD        "3/4": "\u00BE", // U+00BE        "5/6": "\u215A", // U+215A        "1/8": "\u215B", // U+215B        "3/8": "\u215C", // U+215C        "5/8": "\u215D", // U+215D        "7/8": "\u215E", // U+215E    }        */#target "indesign"#targetengine "medianis"#script Medidas#strict on/*  --------------------------    Manage all imports    -------------------------- */#include "lib/_imports.jsx"var AppExportar = (function(){    var _app = {};        _app.rePN = /\d\d\d\.\d\d\d\.\d\d/mg;    _app.fields = [IKEA.CF_SIZE, IKEA.CF_PRICENORMAL];    _app.labels = ['Medidas', 'Precios', 'Todo'];        _app.articles = [];    _app.getEveryPartNumberOn = function(container){        """Return a list of partNumbers in the container. Tipically the         container will be the page, the spread or de document, but         can be any item with allPageItems property.        The textFrames with partNumbers are saved in _app.articles for        later use.        """                var pn = [];        if (! container.hasOwn('allPageItems')) { return []; }                container.allPageItems.filter(function(pi) {             return pi.constructor.name === 'TextFrame';         }).each(function(tframe){            var res = tframe.contents.toString().match(_app.rePN);            if (res !== null) {                pn = pn.concat(res);                _app.articles.push(tframe);            }        });            return pn.toSet().keys().sort();    };    _app.pgbar = {        create: function(maxValue, message) {            var wr = """palette {                             alignChildren: 'center',                            preferredSize: [320, 32],                            message: StaticText { preferredSize: [300, 24] },                            pg : Progressbar { preferredSize: [300, 24] },                    }""";            this.pbar = new Window(wr);            this.pbar.pg.maxvalue = maxValue;            this.pbar.pg.value = 0;            this.pbar.message.text = message;        },        show: function() {            this.pbar.show();        },        hide: function() {            this.pbar.hide();        },        step: function(v, message) {            this.pbar.message.text = message || this.pbar.message;            this.pbar.hide();            this.pbar.pg.value += v;            this.pbar.show();        },        set_message: function(message) {            this.pbar.message.text = message;        }       };    _app.ui = function(){        var buttonStyle     = 'preferredSize: [120, 24]';        var buttonStyleMini = 'preferredSize: [24, 24]';        var wr = """dialog {                 alignChildren: 'center',                topGroup: Group {                    orientation: 'column',                    source: DropDownList { helpTip: 'Indicar el origen de los datos' },                    fields: DropDownList { helpTip: 'Información a exportar' },                },                doExport: Panel {                    enabled: false,                    lb1: StaticText { text: 'Aplicar a todo' },                    bAllPage    : Button { text: 'Página', #buttonStyle# },                    bAllSpread  : Button { text: 'Pliego', #buttonStyle# },                    bAllDocument: Button { text: 'Documento', #buttonStyle# },                },            bottomGroup: Group {                alignment: 'center',                bClose   : Button { text:'Cerrar', #buttonStyle# }            }        }""".replace(/#buttonStyle#/g, buttonStyle).replace(/#buttonStyleMini#/g, buttonStyleMini);        var wnd = new Window(wr);        this.wnd = wnd;                IKEA.ORIGENES.forEach(function(source) {            wnd.topGroup.source.add('item', source.name);        });        this.labels.map(function(what){            wnd.topGroup.fields.add('item', what);        });        wnd.activePanels = function() {            var enabled = wnd.topGroup.source.selection.text !== '';            wnd.doExport.enabled = enabled;        };        wnd.topGroup.source.onChange = function() {             wnd.activePanels();             wnd.source = IKEA.getSource(wnd.topGroup.source.selection.text);        };        wnd.topGroup.fields.onChange = function() {             _app.field = wnd.topGroup.fields.selection.text;            //_app.fields[_app.labels.indexOf(wnd.topGroup.fields.selection.text)];        };            wnd.cancelElement = wnd.bottomGroup.bClose;        wnd.bottomGroup.bClose.onClick = function() {             _app.target = null; this.window.close();        }        wnd.doExport.bAllPage.onClick = function() {             _app.target = 'page'; this.window.close();        }        wnd.doExport.bAllSpread.onClick = function() {             _app.target = 'spread'; this.window.close();        }        wnd.doExport.bAllDocument.onClick = function() {             _app.target = 'document'; this.window.close();        }            return wnd;    };    _app.export_size = function(product){        var sz = product.get(IKEA.CF_SIZE);        if (! sz) {            var nsz = [];            sz = product.get(IKEA.CF_MEASURE);            sz.keys().each(function(k,v){                 nsz.push(k.trim() + ': ' + v);            });            sz = nsz.join('\t');        }        return sz;    };    _app.export_price = function(product){        return product.get(IKEA.CF_PRICENORMAL);    };    _app.export_all = function(product){        return _app.export_size(product) + '\t' +               _app.export_price(product);    };    _app.main = function() {        var self = this;        this.ui().show();        if (this.target === null) {            return ;        }                var dst = { 'page': app.activeWindow.activePage,                    'spread': app.activeWindow.activeSpread,                    'document': app.activeDocument }[this.target];                        var fnc_ = { 'Medidas': _app.export_size,                     'Precios': _app.export_price,                     'Todo'   : _app.export_all                   }[this.field];                        /* ********* */                IKEA.Parser.parseArticle(self.articles[0]);                return ;                /* ***********/                        var pn = this.getEveryPartNumberOn(dst);        this.pgbar.create(pn.length, "Descargando información de artículos");        this.pgbar.show();        var csv = File(Folder.desktop + '/medidas-' + (new Date()).valueOf().toString() + '.csv');        csv.encoding = 'utf-8';        csv.open("w");                var count = 0;        var f=0, mt=pn.length;                try {             do {                var products = IKEA.Products(pn.slice(f,f+10), this.wnd.source);                products.keys().map(function(pnum) {                     var data = fnc_(products[pnum]);                    csv.writeln(pnum + '\t' + data);                    self.pgbar.step(1, pnum);                    count++;                });                f += 10;            } while (f < mt);        } finally {            self.pgbar.step(1, "Finalizando");            csv.close();            self.pgbar.hide();            csv.execute();        }            // Assert count === mt        if (count !== mt) {             alert("ERROR: se esperaban {} registros y se han hecho {}".format(mt, count));         }    };    return _app;})().main();