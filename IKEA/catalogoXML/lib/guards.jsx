var guard = function(expected_type) {     return function(value) {        if (typeof(value) !== expected_type) {            throw TypeError(expected_type + " expected!, but got a " + typeof(value));        }        return value;    };};var gstring = guard('string');var gnumber = guard('number');var gbool = guard('boolean');var gfunction = guard('function');var garray = guard('array');var gobject = guard('object');/** If the test condition is false or undefined, throw exception */var assert = function(condition, exception) {    if (condition === false || condition === undefined) {        if (!exception) {            exception = { message:'ASSERT CONDITION FAILED: ', name:'AssertionError' };        }        throw exception ;    }    return condition;}/** If the 'value' param is not of expected 'type', raise 'exception' */var typeAssert = function(value, type, exception) {    if (! (value instanceof type) ) {        if (!exception) {            throw TypeError(type.name + " expected!, but got a " + typeof(value));        }        throw exception ;    }    return value;}