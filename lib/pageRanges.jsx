function getPagesToExportFromRange(range){    range = range.split(/\s+/).join(',').split(/,,+/).join(','); // remove spaces and multiple commas    range = range.replace(/^,/, ''); // remove comma at begining    range = range.replace(/,?\s+$/,''); // removes comma and spaces at the end         var parts = range.split(',');        var pages = [];    var pagesIncluded = {};    var insertPage = function(page) {        page = normalizeNumber(page, 99);        if (pagesIncluded[page] == undefined) {            pages.push(page);            pagesIncluded[page] = true;        }    }    for (var i=0; i<parts.length; ++i)    {        if (parts[i].indexOf('-') > 0) {            var sec = parts[i].split('-');            if (sec.length <= 2) {                for (var ini=parseInt(sec[0]), fin=parseInt(sec[1]); ini<=fin; ++ini)                    insertPage(ini);            }            else                alert("El intervalo no es correcto: " + parts[i] + ', se descarta');                        }        else insertPage(parts[i]);    }    return pages.sort();}// ---------------------------------------------------------------------------------------------------------------function normalizeNumber(number, maxNumber){	if (number > maxNumber) return number.toString();			var zeros = 0;	while (maxNumber = parseInt(maxNumber / 10)) ++zeros;	var r = number;	while (r = parseInt(r / 10)) --zeros;		var n = '';	while (zeros-- > 0) n += '0';		return n.toString() + number.toString();}// ---------------------------------------------------------------------------------------------------------------function removeDuplicateSpreadPages(doc, pages)/*  Remove pages that belongs to the same spread, to avoid repeating    spreads.    */{    var spreadPage = [];    var spreads = {};    for (var i=0; i<pages.length; ++i)    {        var currentSpread = doc.pages[parseInt(pages[i])-1].parent;        if (spreads[currentSpread.id] == undefined)        {            spreadPage.push(currentSpread.pages[0].name);            spreads[currentSpread.id] = true;        }    }    return spreadPage.sort();}