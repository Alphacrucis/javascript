var TMP_FOLDER = Folder.temp;var task;var W;// TODO: preferencias de exportación en fichero "config.jsx"var pdf_preset = undefined;function do_export(fileName, originFolder, tmpFolder, dstFolder, doneFolder, isBook, showPref) {      var N = originFolder + fileName;        // Open indesign file without dialogs    if (app.version === 3) app.scriptPreferences.userInteractionLevel = UserInteractionLevels.NEVER_INTERACT;    else app.scriptPreferences.userInteractionLevel = UserInteractionLevels.NEVER_INTERACT;    //    app.scriptPreferences.enableRedraw = false;    var D = app.open(File(N));          if (D) {        var pdfName = D.name.split('.indd')[0]+'.pdf';                // export pdf to temp folder        D.exportFile(ExportFormat.PDF_TYPE, File(tmpFolder + pdfName), showPref, pdf_preset);         D.close(SaveOptions.NO);        // move pdf to dstFolder        File(tmpFolder + pdfName).copy(dstFolder + pdfName);        File(tmpFolder + pdfName).remove();        // move indesign to doneFolder        File(N).copy(File(doneFolder + fileName));        File(N).remove();      }    if (app.version === 3) app.userInteractionLevel = UserInteractionLevels.INTERACT_WITH_ALL;    else app.scriptPreferences.userInteractionLevel = UserInteractionLevels.INTERACT_WITH_ALL;    //    app.scriptPreferences.enableRedraw = true;}function mainWindow(spyFolder, dstFolder, moveFolder) {    var R = """palette {        orientation:'row', alignChildren:'fill',         text: 'DOCUMENTOS',         preferredSize:[380,300],        left:20,        top:50,        mainPanel: Panel {            docs : ListBox { preferredSize:[370,290], numberOfColumns:1, showHeaders:true, columnTitles:["Documento"], },            showPref: Checkbox { text:'Mostrar preferencias', value:true, },            close : Button { text:'Cerrar servidor', },        },    }""";        var W = new Window(R);    W.dstFolder = dstFolder + '/';    W.moveFolder = moveFolder + '/';    W.spyFolder = spyFolder + '/';    W.tmpFolder = TMP_FOLDER;        if (!Folder(W.tmpFolder).exists)        Folder(W.tmpFolder).create();        W.cerrar = false;        W.mainPanel.close.onClick = function() {         task.removeEventListener(IdleEvent.ON_IDLE, do_task);        task.sleep = 0;        this.window.cerrar = true;         this.window.close();     } ;        W.updateDocs = function() {        var docs = this.window.mainPanel.docs;        docs.removeAll();                var D = Folder(this.window.spyFolder);        var F = D.getFiles("*.indd");                for (var i=0, e=F.length; i<e; ++i) {            docs.add('item', F[i].displayName);         }            var B = D.getFiles("*.indb");        for (var i=0, e=B.length; i<e; ++i) {            docs.add('item', B[i].displayName);         }    };        W.exportDocs = function() {        var docs = this.window.mainPanel.docs;        if (docs.items.length > 0) {            var N = docs.items[0].text;            do_export( N                     , this.window.spyFolder                     , this.window.tmpFolder                     , this.window.dstFolder                     , this.window.moveFolder                     , (N.split('.')[1].toLowerCase() == 'indb')                     , this.window.mainPanel.showPref.value                     );                    docs.remove(0);            this.window.mainPanel.showPref.value = false;        }    };        return W;}function do_task(idleEvent) {       W.updateDocs();    try {        W.exportDocs();    } catch(e) { } ; // ignore partial file errors    }