#target indesign#strict on/*  TODO: admitir archivos indd con el mismo nombre, en distintos directorios.           replicar la estructura de directorios en la carpeta destino */// http://extendables.org/#include "~/_scripts/frameworks/stdbrouw-Extendables-b315665/extendables.jsx"var ui = require("ui");function selectFiles(){    var files;    var basePath = Folder.selectDialog();        if (basePath)    {        files = Folder(basePath).files('*.indd');        var folders = Folder(basePath).folders( function(f) {             return true; // f.name.indexOf('_af') === -1 && f.name.toLowerCase() != 'versiones';         } );                while (folders.length > 0)        {            var f = folders.pop();            files = files.concat( Folder(f).files('*.indd') );        }    }    return files;}function getExportPresetsNames(){    var miArray = [];    for (i=0; i<app.pdfExportPresets.length;i++)        miArray.push( app.pdfExportPresets.item(i).name.toString() );        return miArray;}function selectDialog(files){    if (!files) return ;    var mixins = {        'input': {            'preferredSize': [300, 20],            'justify': 'left'        },        'list': {            'size': [420, 420]        },    };    var dlg = new ui.Dialog('Selección de ficheros Indesign a exportar').with(mixins);      dlg.panel('main');    dlg.main.row('gpdf').text('lb1', 'Opciones de exportación PDF').dropdown('presets', getExportPresetsNames());    dlg.main.gpdf.presets.selection = dlg.main.gpdf.presets.items[dlg.main.gpdf.presets.items.length-1];    dlg.main.gpdf.checkbox('verOpciones', 'Mostrar Opciones');    dlg.main.row('gdst').text('lb1', 'Carpeta destino').input('target',  Folder('~/Documents/').fullName).using('input');    dlg.main.gdst.button('selectDst', '...');    dlg.main.list('lista', ['A pdf','Fichero']);        files.forEach( function(f) {         dlg.main.lista.item(f, ['', decodeURI(f.name)]);    } );        dlg.main.lista.values().forEach( function(item) {         if (item.constructor.name == 'ListItem') item.checked = true;     });    dlg.main.gdst.selectDst.on('click').do( function() {        var dst = Folder.selectDialog('Carpeta de destino para los PDF');        if (dst)            dlg.main.gdst.target.text = dst.fullName;    } );           dlg.main.row('r1');    dlg.main.r1.button('confirm', 'Ok');    dlg.main.r1.button('cancel', 'Cerrar');        dlg.main.r1.confirm.on('click').do( function() { ok=true; this.window.close(); } );    dlg.main.r1.cancel.on('click').do( function() { this.window.close(); } );    dlg.cancelElement = dlg.main.r1.cancel;        dlg.main.lista.window.onClick = function() {         try{            this.selection.checked = !this.selection.checked;         } catch(e) { return ; }    };    var ok; // dlg.show() changes ok value    dlg.main.lista.window.size = [420,420];    dlg.window.show();        if (ok)    {        var result = [];        if (dlg.main.lista.window.items.length)        {            var items = dlg.main.lista.window.items;            for (var i=0, end=items.length; i<end; ++i)                // if (items[i].checked)                     result.push(files[i]);        }                    return [result, dlg.main.gdst.target.text, dlg.main.gpdf.presets.selection.text, dlg.main.gpdf.verOpciones.value];    }}function main(){    var r = selectDialog(selectFiles());    if (r)    {        var files = r[0];        var dst = r[1];        var expPDF = r[2];        var preset = app.pdfExportPresets.itemByName(expPDF);        var viewOptions = r[3];        app.pdfExportPreferences.viewPDF = false;        files.forEach( function(f) {            try {                var d = app.open(f, false);                d.exportFile(                    ExportFormat.pdfType,                     File(dst + '/' + f.name.split('.indd')[0] + '.pdf'),                     viewOptions,                    preset);                d.close(SaveOptions.NO);                viewOptions = false;            } catch(e) { alert(e); }            } );    }}main();