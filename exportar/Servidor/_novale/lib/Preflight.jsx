(function () {    this.Preflight = {};    // Get a list with all PrefightPresets of Indesign -----------------------------------------              Preflight.getPresets = function(dropDown) {        var items = [];                for (var i=0; i<app.preflightProfiles.length; ++i) {            items.push(app.preflightProfiles[i].name);                       }            return items;    }    /*  Check for common errors in the document and return an array of two values,         a string list with the warnings and the number of warnings        */    Preflight.checkDocument = function(doc, preset) {        var warnings = [];                if (!doc)            doc = app.activeDocument;                if (!preset)            preset = app.preflightProfiles[0];                       // activate preflight profiles         doc.preflightOptions.preflightWorkingProfile = preset;        doc.preflightOptions.preflightOff = false;                doc.activeProcess.waitForProcess();                 var errors = doc.activeProcess.aggregatedResults[2];        var numErrors = 0;                doc.preflightOptions.preflightOff = true;                if (errors.length) {            var msg = '';            for (i=0; i<errors.length; ++i) {                var id = errors[i][0];                                if (id == '1')                    msg = errors[i][1];                else if (id == '2') {                    msg += ': [' + errors[i][1] + ']';                    warnings.push(msg);                }                else {                    var pag = (errors[i][2] != '') ?  ' en página ' + errors[i][2] : '';                    warnings.push('     ' + errors[i][1] + pag);                    numErrors++;                }            }        }                return [warnings, numErrors];    }}).call(this);        // Check Document for common errors and inform the UI in logMessages -----------------------------------------  //~         check : function(doc, checkFunction) {//~         wnd.mainPanel.enabled = false;//~         wnd.checkPanel.enabled = false;//~         var result = checkFunction(doc, wnd.checkPanel.gPreset.Preset.selection.toString());//~         wnd.mainPanel.enabled = true;//~         wnd.checkPanel.enabled = true;//~         //~         var logMessages = result[0];//~         var numErrors = result[1];//~         //~         wnd.checkPanel.g1.ErrLb.text = '[Errores: ' + numErrors + ']';//~         wnd.checkPanel.logMsg.removeAll();//~         //~         if (numErrors > 0)//~         {//~             var warningImage = ScriptUI.newImage('/Users/javi/prg/javascript/indesign/util/.images/warning.png');//~             for (var i=0; i<logMessages.length; ++i)//~             {            //~                wnd.checkPanel.logMsg.add('item', logMessages[i]);//~                if (wnd.checkPanel.logMsg.items[wnd.checkPanel.logMsg.items.length-1].text[0] != ' ')//~                 wnd.checkPanel.logMsg.items[wnd.checkPanel.logMsg.items.length-1].image = warningImage;//~             }//~         }//~         else {//~             wnd.checkPanel.logMsg.add('item', ' Ningún error');//~             //~             var okImage = ScriptUI.newImage('/Users/javi/prg/javascript/indesign/util/.images/ok.png');//~             wnd.checkPanel.logMsg.items[0].image = okImage;//~         }//~     //~         return numErrors;//~     }