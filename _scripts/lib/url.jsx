function HTMLPage(url, params){    this.url = url;    this.params = params;    /*  Uses tidy app if installed to reformat the internal html */    this.reformat = function() { this.html = tidy(this.html, "-indent -quiet -html -m");  };        this.html = getHTMLCode(this.url, this.params);     this.reformat();         return this;}function getHTMLCode(url, params){    const CURL = '/usr/bin/curl ';    const WEB  = 'http://ibiza.ikea.es/images_articulosweb/';    var script = 'do shell script "' + CURL + url + params + '"';                return app.doScript(script, ScriptLanguage.APPLESCRIPT_LANGUAGE);}function tidy(html, params){    var tmpFile = new File(Folder.temp + '/url_temp.txt');    tmpFile.open("w");    tmpFile.writeln(html);    tmpFile.close();    var tidy_command = function() { return "/usr/bin/tidy " + params + " '" + tmpFile.fullName + "'"; }    var script = 'do shell script "' + tidy_command() + '"';                try { app.doScript(script, ScriptLanguage.APPLESCRIPT_LANGUAGE); }    catch(e) {}    tmpFile.open("r");    var result = tmpFile.read();    tmpFile.close();    tmpFile.remove();    return result;}HTMLPage.prototype.div = function(prop){    var re = /\<div.*\>\<\/div\>/gim;        return this.html.split(re).slice(1);}HTMLPage.prototype.saveTo = function(fileName){    var f = new File(fileName);    f.open("w");    f.write(this.html);    f.close();}HTMLPage.prototype.xml = function(){    this.reformat();    this.xml = new XML(this.html);}var html = """<html xmlns="http://www.w3.org/1999/xhtml">  <head></head>  <body>prueba    <div align="center">      center      <div class="col_home_banner">        col_home_banner        <div class="col_home">          col_home principio          <div class="cabecera">cabecera</div>          col_home fin        </div>      </div>    </div>  </body></html>""";var tag_open = /\<([a-z]+)(\s[^\>]+)*\>/mi;var tag_close = /\>(.*)\<\/(.+)\>/gmi;// lee todos los cierres de tag (antecedidos por su contenido)var html_c = html;var TC = [];var c = tag_close.exec(html_c);while (c && c.length){    var name=c[2], value=c[1];    if (TC[name])        TC[name].push({ content:value });    else        TC[name] = [{ attr:attr, content:value }];            html_c = html_c.slice(0, html_c.indexOf(c[0]) + 1)            + html_c.slice(html_c.indexOf(c[0]) + c[0].length);    c = tag_close.exec(html_c);}var m = tag_open.exec(html);var TAGS = [];while (m && m.length){    var name=m[1],attr=m[2];        if (TAGS[name])        TAGS[name].push({ attr:attr, content:'' });    else        TAGS[name] = [{ attr:attr, content:'' }];            html = html.slice(html.indexOf(m[0])+m[0].length);    m = tag_open.exec(html);}alert('fin');