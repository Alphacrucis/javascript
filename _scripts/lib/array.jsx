Array.prototype.equal = function(obj) {    if (this.length != obj.length) return false;        for (var i=0, e=this.length; i<e; ++i)        if (this[i].constructor.name !== obj[i].constructor.name || this[i] != obj[i])            return false;                return true;}Array.prototype.concatCollection = function(collection){    if (!collection.hasOwnProperty('everyItem'))        throw "Param isn't an Indesign Collection type";            for (var i=0, e=collection.length; i<e; ++i)         this.push( collection[i] );        return this;}Array.prototype.flatten = function(){    var r = [];        for (var i=0, e=this.length; i<e; ++i)    {        if (this[i].constructor.name == 'array')            r = r.concat(this[i]);        else if (this[i].hasOwnProperty('everyItem'))            r = r.concatCollection(this[i]);        else            r.push(this[i]);    }    return r;}