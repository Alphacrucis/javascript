#target InDesignfunction obtener_cotas(obj){    if (obj && obj.isValid)    {        var md = obj.geometricBounds;        return { x: md[3] - md[1], y: md[2]-md[0] };    }}function obtener_simbolo_unidad(doc){    var unit;    switch(doc.viewPreferences.horizontalMeasurementUnits)    {        case MeasurementUnits.CENTIMETERS: unit = " cm"; break;        case MeasurementUnits.MILLIMETERS: unit = " mm"; break;        case MeasurementUnits.INCHES: unit = " in"; break;        case MeasurementUnits.PIXELS: unit = " px"; break;        case MeasurementUnits.AMERICAN_POINTS: unit = " pt"; break;        default: ""; break;    }    return unit;}function changeUnitsTo(doc, units){    var XUnits = doc.viewPreferences.horizontalMeasurementUnits;    var YUnits = doc.viewPreferences.verticalMeasurementUnits;    doc.viewPreferences.horizontalMeasurementUnits = units.x;    doc.viewPreferences.verticalMeasurementUnits = units.y;        return { x:XUnits, y:YUnits };}function document(obj) {    while (obj.constructor.name != 'App' && obj.constructor.name != 'Document')        obj = obj.parent;            if ( obj.constructor.name == 'Document')        return obj;}function linea_cota_horizontal(Obj){    var doc = document(Obj);        var unit = obtener_simbolo_unidad(doc);        var gris = doc.colors.add();    gris.model = ColorModel.PROCESS;    gris.space = ColorSpace.CMYK;    gris.colorValue = [0, 0, 0, 60];        var cota = obtener_cotas(Obj);    var margen1 = 4.7; if (doc.viewPreferences.horizontalMeasurementUnits == MeasurementUnits.PIXELS) margen1 += 5;    var margen2 = 2.7;     var gb = Obj.geometricBounds;    var gbH = [ gb[0]-2, gb[1], gb[0]-2, cota.x+gb[1] ];    var gbLH = [ gb[0]-margen2, gb[1], gb[0]-margen1, cota.x+gb[1] ];        var page = app.activeWindow.activePage;    var lnH = page.graphicLines.add( {                strokeWeight:"0.25pt"              , strokeColor:gris              , geometricBounds: gbH              , leftLineEnd: ArrowHead.SIMPLE_ARROW_HEAD              , rightLineEnd: ArrowHead.SIMPLE_ARROW_HEAD              } );    var lbH = page.textFrames.add( { contents: cota.x+unit              , geometricBounds: gbLH              } );              lbH.paragraphs[0].pointSize = 6;    lbH.paragraphs[0].fillColor = gris;    lbH.paragraphs[0].justification = Justification.CENTER_ALIGN;        return [lnH, lbH];}function linea_cota_vertical(Obj){    var doc = document(Obj);        var unit = obtener_simbolo_unidad(doc);        var gris = doc.colors.add();    gris.model = ColorModel.PROCESS;    gris.space = ColorSpace.CMYK;    gris.colorValue = [0, 0, 0, 60];        var margen1 = 4.7; if (doc.viewPreferences.horizontalMeasurementUnits == MeasurementUnits.PIXELS) margen1 += 5;    var margen2 = 2.7;     var cota = obtener_cotas(Obj);    var gb = Obj.geometricBounds;    var gbV = [ gb[0], gb[1]-2, gb[2], gb[1]-2 ];    var gbLV = [ gb[0], gb[1]-margen1, gb[2], gb[1]-margen2 ];        var page = app.activeWindow.activePage;    var lnV = page.graphicLines.add( {                strokeWeight:"0.25pt"              , strokeColor:gris              , geometricBounds: gbV              , leftLineEnd: ArrowHead.SIMPLE_ARROW_HEAD              , rightLineEnd: ArrowHead.SIMPLE_ARROW_HEAD              } );              var lbV = page.textFrames.add( { contents: cota.x+unit              , absoluteRotationAngle:90              } );              lbV.geometricBounds = gbLV;    lbV.paragraphs[0].pointSize = 6;    lbV.paragraphs[0].fillColor = gris;    lbV.paragraphs[0].justification = Justification.CENTER_ALIGN;    return [lnV, lbV];}function nueva_capa(nombre){    app.activeDocument.activeLayer = app.activeDocument.layers.add(nombre);}function main(){    nueva_capa('cotas');    var h = linea_cota_horizontal(app.selection[0]);    var v = linea_cota_vertical(app.selection[0]);        app.activeWindow.activePage.groups.add(h.concat(v));}app.doScript(main, ScriptLanguage.JAVASCRIPT, [], UndoModes.FAST_ENTIRE_SCRIPT);